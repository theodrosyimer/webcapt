name: Release and Publish

on:
  workflow_run:
    workflows: ['NPM Package CI']
    types: [completed]
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release-and-publish:
    runs-on: ubuntu-latest

    # ‚úÖ Only required permissions for trusted publishing
    permissions:
      contents: write # Git operations, create releases
      id-token: write # OIDC for trusted publishing

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Git User
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          # ‚úÖ Use Node.js 22.18.0 for guaranteed NPM 11.x compatibility
          node-version: '22.18.0'

      - name: Upgrade to Latest NPM CLI
        run: npm install -g npm@latest

      - name: Verify NPM CLI for Trusted Publishing
        run: |
          npm_version=$(npm --version)
          echo "NPM CLI version: $npm_version"

          # Verify trusted publishing support
          [ "$(printf '%s\n' '11.5.1' '$npm_version' | sort -V | head -n1)" = "11.5.1" ] && {
            echo "‚úÖ NPM CLI $npm_version supports trusted publishing"
          } || {
            echo "‚ùå Installation of latest NPM failed or version insufficient for trusted publishing"
            echo "‚ùå Current version: $npm_version (required: 11.5.1+)"
            echo "‚ùå Try manually upgrading: npm install -g npm@latest"
            exit 1
          }

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Package
        run: pnpm build

      - name: Release and Publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # run: pnpm release --ci
        run: pnpm publish --access public

      # - name: Publish

      - name: Verify Provenance
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          echo "‚úÖ Package published with automatic provenance"
          echo "üîç Verify at: https://npmjs.com/package/$PACKAGE_NAME"
